{"version":3,"sources":["Components/SearchBar.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","search","onFormSubmit","onHandleChange","className","onSubmit","type","placeholder","value","onChange","api","Main","useState","setSearch","weather","setWeather","day","Date","getDay","monthName","getMonth","dateNumber","getDate","e","preventDefault","fetch","then","res","json","result","console","log","target","main","Math","round","temp","name","sys","country","size","style","marginTop","wind","speed","clouds","all","humidity","App","display","alignItems","justifyContent","height","background","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAqBeA,MAjBf,SAAmBC,GAAQ,IAEhBC,EAAwCD,EAAxCC,OAAQC,EAAgCF,EAAhCE,aAAcC,EAAkBH,EAAlBG,eAE7B,OACI,qBAAKC,UAAU,qBAAf,SAEI,sBAAMA,UAAU,aAAaC,SAAUH,EAAvC,SACI,uBAAOE,UAAU,cAAcE,KAAK,OAAOC,YAAY,4BAA4BC,MAAOP,EAAQQ,SAAUN,S,sBCLtHO,EACG,mCADHA,EAEI,2CAoFKC,EAhFF,WAAO,IAAD,EAEaC,mBAAS,IAFtB,mBAERX,EAFQ,KAEAY,EAFA,OAGeD,mBAAS,IAHxB,mBAGRE,EAHQ,KAGCC,EAHD,KAMTC,EADO,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,aACzD,IAAIC,MAAOC,UAGtBC,EADa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAD5E,IAAIF,MAAOG,WAAa,EAEF,GAGrCC,GAAc,IAAIJ,MAAOK,UAmB/B,OACI,sBAAKlB,UAAU,gBAAf,UACI,cAAC,EAAD,CAAWH,OAAQA,EAAQC,aAnBnC,SAA0BqB,GACtBA,EAAEC,iBAEFC,MAAM,GAAD,OAAIf,EAAJ,qBAAyBT,EAAzB,+BAAsDS,IACtDgB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFd,EAAWc,GACXhB,EAAU,IACViB,QAAQC,IAAIF,OAW2C1B,eANnE,SAA4BoB,GACxBV,EAAUU,EAAES,OAAOxB,UAOS,oBAAfM,EAAQmB,KAEb,qCAEI,sBAAK7B,UAAU,uBAAf,UAEI,oBAAIA,UAAU,cAAd,SAA6BU,EAAQA,QAAQ,GAAGmB,OAChD,oBAAG7B,UAAU,OAAb,UAAqB8B,KAAKC,MAAMrB,EAAQmB,KAAKG,MAA7C,UACA,oBAAGhC,UAAU,WAAb,UAAyBU,EAAQuB,KAAjC,KAAyCvB,EAAQwB,IAAIC,WACrD,oBAAGnC,UAAU,OAAb,UAAqBY,EAArB,KAA4BG,EAA5B,IAAwCE,QAI5C,sBAAKjB,UAAU,4BAAf,UAEI,sBAAKA,UAAU,uBAAf,UACI,cAAC,IAAD,CAAQoC,KAAM,GAAIC,MAAO,CAACC,UAAW,UACrC,+BAAK5B,EAAQ6B,KAAKC,MAAlB,aAIJ,sBAAKxC,UAAU,uBAAf,UACI,cAAC,IAAD,CAAUoC,KAAM,GAAIC,MAAO,CAACC,UAAW,UACvC,+BAAK5B,EAAQ+B,OAAOC,IAApB,UAIJ,sBAAK1C,UAAU,uBAAf,UACI,cAAC,IAAD,CAAYoC,KAAM,GAAIC,MAAO,CAACC,UAAW,UACzC,+BAAK5B,EAAQmB,KAAKc,SAAlB,gBAUX,OCnFF,SAASC,IAUpB,OACI,mCACA,qBAAKP,MAVS,CACdQ,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,OACRC,WAAY,qCAKZ,SAEE,cAAC,EAAD,QClBV,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c3a98941.chunk.js","sourcesContent":["import React from 'react'\nimport './Styles/SearchBar.css'\n\n\nfunction SearchBar(props) {\n\n    const {search, onFormSubmit, onHandleChange} = props;\n \n    return (\n        <div className='searchBarContainer'>\n\n            <form className='formStyles' onSubmit={onFormSubmit}>\n                <input className='inputStyles' type='text' placeholder=\"Where are you going today\" value={search} onChange={onHandleChange}/>\n            </form>\n\n            \n        </div>\n    )\n}\n\n\nexport default SearchBar;","import React, { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport './Styles/Main.css';\nimport { FiWind } from 'react-icons/fi';\nimport { WiCloudy, WiHumidity } from 'react-icons/wi';\n\n\nconst api = {\n    key: 'a25a1266930f81d50f61dfa08efd29b4',\n    base: 'https://api.openweathermap.org/data/2.5/'\n  }\n\n\nconst Main = () => {\n\n    const [search, setSearch] = useState('');\n    const [weather, setWeather] = useState({});\n\n    const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\n    const day = days[new Date().getDay()];\n    const monthNumber = (new Date().getMonth() + 1);\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const monthName = monthNames[monthNumber - 1];\n\n    //Date selector\n    const dateNumber = (new Date().getDate());\n\n    function handleFormSubmit(e) {\n        e.preventDefault();\n\n        fetch(`${api.base}weather?q=${search}&units=metric&APPID=${api.key}`)\n            .then(res => res.json())\n            .then(result => {\n                setWeather(result);\n                setSearch('');\n                console.log(result)\n            })\n\n    }\n\n    function handleSearchChange(e) {\n        setSearch(e.target.value)\n    }\n\n    return (\n        <div className='mainContainer'>\n            <SearchBar search={search} onFormSubmit={handleFormSubmit} onHandleChange={handleSearchChange}/>\n\n            {(typeof weather.main !='undefined') ? (\n\n                <>\n\n                    <div className='weatherDataContainer'>\n\n                        <h3 className='weatherDesc'>{weather.weather[0].main}</h3>\n                        <p className='temp'>{Math.round(weather.main.temp)}Â°</p>\n                        <p className='location'>{weather.name}, {weather.sys.country}</p>\n                        <p className='date'>{day}, {monthName} {dateNumber}</p>\n\n                    </div>\n\n                    <div className='extraWeatherDataContainer'>\n\n                        <div className='extraWeatherData-box'>\n                            <FiWind size={25} style={{marginTop: '10px'}}/>\n                            <h3>{weather.wind.speed} m/s</h3>\n\n                        </div>\n\n                        <div className='extraWeatherData-box'>\n                            <WiCloudy size={30} style={{marginTop: '10px'}}/>   \n                            <h3>{weather.clouds.all}%</h3>\n                            \n                        </div>\n\n                        <div className='extraWeatherData-box'>\n                            <WiHumidity size={25} style={{marginTop: '10px'}}/>\n                            <h3>{weather.main.humidity}%</h3>\n                            \n                        </div>\n\n\n                    </div>\n                \n                \n                </>\n\n            ) : ('') }\n            \n        </div>\n    )\n}\n\nexport default Main;\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// // import SearchBar from './SearchBar';\n// import './Styles/Main.css'\n\n// const api = {\n//     key: 'a25a1266930f81d50f61dfa08efd29b4',\n//     base: 'https://api.openweathermap.org/data/2.5/'\n// }\n\n// const Main = () => {\n\n//     const [search, setSearch] = useState('');\n//     const [weather, setWeather] = useState({});\n\n//     function handleFormSubmit(e) {\n//         e.preventDefault();\n\n//         fetch(`${api.base}weather?q=${search}&units=metric&APPID=${api.key}`)\n//             .then(res => res.json())\n//             .then(result => {\n//                 setWeather(result);\n//                 setSearch('');\n//                 console.log(result)\n//             })\n//     }\n\n//     return (\n//         <div className='mainContainer'>\n//             <div className='searchBarContainer'>\n\n//                 <form className='formStyles' onSubmit={handleFormSubmit}>\n//                     <input className='inputStyles' type='text' placeholder=\"Where are you going today\" value={search} onChange={e => setSearch(e.target.value)}/>\n//                 </form>\n\n\n//             </div>\n            \n            \n//         </div>\n//     )\n// }\n\n// export default Main;\n","import React from \"react\";\nimport Main from './Components/Main'\n\n\nexport default function App() {\n\n    const container = {\n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center', \n        height: '100%', \n        background: 'linear-gradient(#7617BC, #02093C)'\n      };\n    \n    return (\n        <>\n        <div style={container}>\n\n          <Main />\n\n        </div>\n        \n        </>\n    )\n    \n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}